; Mallory Rule Configuration
; Pseudo BNF Below
;
; <valid-ip> ::= IPv4 Address
; <wildcard> ::= "*"
;
; <address> ::= <valid-ip> | <wildcard>
; <port> ::=  0-65536 | <wildcard>
; <direction> ::= "c2s" | "s2c" | <wildcard>
; <payload> ::= "matchingstring" | <wildcard> 
; <action> ::= "Muck" | "Debug" | "Fuzz" | "Nothing"
; <passthru> ::= "True" | "False"
; 
; This is strict. If you put "true" instead of "True" the rule will fail
; 
; [DebugRuleExample]
; addr=<address>
; port=<port>
; direction=<direction>
; payload=<payload>
; passthru=True
; action=Debug
; 
; [MuckRuleExample]
; address=<address>
; port=<port>
; direction=<direction>
; payload=<payload>
; action=Muck
; muck_1 = s/FOO/bar/gi
; muck_2 = s/gzip//gi
; muck_N = s/(.*)//gi
; 
; Matching Criteria
; --
; Address - Valid IPv4 address. Wildcard for all addresses
; Port - A valid port. Wildcard for all ports.
; Direction - Which direction the rule should be active on. Wildcard for both.
; Payload - String to match in the payload before rule will trigger. Wildcard for all payloads
; Action - The type of action to take (string mangling, debugging, fuzzing, etc.)
; 
; Action Note
; -- 
; Some actions may have additional items that can be specified
; 
[ClientHTTPDebugger]
addr=192.168.1.1
port=80
direction=c2s
payload=*
passthru=True
action=Debug

[ClientHTTPMuck]
port=80
direction=c2s
action=Muck
muck_1=s/EHH//g
muck_2=s/FOO//g
muck_3=s/BAZ//g
